name: snowflake-devops-demo

on:
  push:
    branches:
      - main
    paths:
      - 'bronze/migrations/**'
  workflow_dispatch:

jobs:
  deploy-bronze-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Install dependencies
        run: |
          pip install pyyaml schemachange
          python -c "import yaml; print('PyYAML loaded successfully')"

      - name: Deploy bronze changes
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE_DEV: ${{ secrets.SF_DATABASE_DEV }}  # Optional override
          SF_SCHEMA_BRONZE: ${{ secrets.SF_SCHEMA_BRONZE }}  # Optional override
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Step 2: Deploying bronze"
          if [ -d "$GITHUB_WORKSPACE/bronze/migrations" ]; then
            echo "Loading variables from bronze-var.yml"
            if [ -f "$GITHUB_WORKSPACE/bronze/migrations/bronze-var.yml" ] && [ -r "$GITHUB_WORKSPACE/bronze/migrations/bronze-var.yml" ]; then
              echo "File found and readable, parsing..."
              vars=$(python -c "import yaml, json; f = open('$GITHUB_WORKSPACE/bronze/migrations/bronze-var.yml'); try: data = yaml.safe_load(f); f.close(); vars_data = data.get('variables', {}); print(json.dumps({'database_name': vars_data.get('sf_database'), 'schema_name': vars_data.get('sf_schema')})) except Exception as e: print(f'Error: {e}')")
              echo "Parsed vars: $vars"
              if [ -z "$vars" ] || ! echo "$vars" | python -c "import json; json.loads(input())" 2>/dev/null; then
                echo "Error: Invalid or empty vars JSON: $vars"
                vars='{"database_name": "sf_devops_dev_db", "schema_name": "bronze"}'
              fi
            else
              echo "Error: bronze-var.yml not found or not readable"
              vars='{"database_name": "sf_devops_dev_db", "schema_name": "bronze"}'
            fi
            database_name=$(echo "$vars" | python -c "import json, sys; print(json.loads(sys.stdin.read())['database_name'])")
            schema_name=$(echo "$vars" | python -c "import json, sys; print(json.loads(sys.stdin.read())['schema_name'])")
            echo "Extracted database_name: $database_name"
            echo "Extracted schema_name: $schema_name"
            database_name="${SF_DATABASE_DEV:-$database_name}"
            schema_name="${SF_SCHEMA_BRONZE:-$schema_name}"
            echo "Final database_name: $database_name"
            echo "Final schema_name: $schema_name"
            echo "Running schemachange with vars: $vars"
            schemachange \
              -f "$GITHUB_WORKSPACE/bronze/migrations/scripts" \
              -a "$SF_ACCOUNT" \
              -u "$SF_USERNAME" \
              -r "$SF_ROLE" \
              -w "$SF_WAREHOUSE" \
              -d "$database_name" \
              -c "$database_name.SCHEMACHANGE.CHANGE_HISTORY" \
              --create-change-history-table \
              --config-folder "$GITHUB_WORKSPACE/bronze/migrations/config" \
              --vars "$vars"
          else
            echo "Skipping bronze: No migrations folder"
          fi
