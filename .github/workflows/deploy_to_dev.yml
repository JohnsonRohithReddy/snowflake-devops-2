name: snowflake-devops-demo

on:
  push:
    branches:
      - dev
    paths:
      - 'bronze/migrations/**'
  workflow_dispatch:

jobs:
  deploy-bronze-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Install dependencies
        run: pip install pyyaml schemachange

      - name: Deploy bronze changes
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_SCHEMA_BRONZE: ${{ secrets.SF_SCHEMA_BRONZE }}  # Optional override
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Step 1: Parsing variables from bronze-var.yml"
          vars=$(python $GITHUB_WORKSPACE/parse_vars.py $GITHUB_WORKSPACE/bronze/migrations/bronze-var.yml 2> debug.log)
          echo "Parsed vars: $vars"
          if [ -z "$vars" ] || ! echo "$vars" | python -c "import json; json.loads(input())" 2>/dev/null; then
            echo "Error: Invalid or empty vars JSON: $vars"
            cat debug.log
            vars='{"sf_database": "SF_DEVOPS_DEV_DB", "sf_schema": "bronze", "new_var": "test_value"}'
          fi
          database_name=$(echo "$vars" | python -c "import json, sys; print(json.loads(sys.stdin.read())['sf_database'])")
          schema_name=$(echo "$vars" | python -c "import json, sys; print(json.loads(sys.stdin.read())['sf_schema'])")
          echo "Extracted database_name: $database_name"
          echo "Extracted schema_name: $schema_name"
          # Override with secret if set
          schema_name="${SF_SCHEMA_BRONZE:-$schema_name}"
          echo "Final database_name: $database_name"
          echo "Final schema_name: $schema_name"
          echo "Step 2: Running schemachange with vars: $vars"
          ls -la "$GITHUB_WORKSPACE/bronze/migrations/scripts"  # Debug: List scripts
          schemachange \
            -f "$GITHUB_WORKSPACE/bronze/migrations/scripts" \
            -a "$SF_ACCOUNT" \
            -u "$SF_USERNAME" \
            -r "$SF_ROLE" \
            -w "$SF_WAREHOUSE" \
            -d "$database_name" \
            -c "$database_name.SCHEMACHANGE.CHANGE_HISTORY" \
            --create-change-history-table \
            --config-folder "$GITHUB_WORKSPACE/bronze/migrations/config" \
            --vars "$vars"
